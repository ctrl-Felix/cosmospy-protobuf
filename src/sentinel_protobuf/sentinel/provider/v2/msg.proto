syntax = "proto3";
package sentinel.provider.v2;

import "gogoproto/gogo.proto";
import "sentinel/types/v1/status.proto";

option go_package = "github.com/sentinel-official/hub/x/provider/types";
option (gogoproto.equal_all)           = false;
option (gogoproto.goproto_getters_all) = false;

// MsgRegisterRequest defines the SDK message for registering a provider
message MsgRegisterRequest {
  string frm        = 1;
  string name        = 2;
  string identity    = 3;
  string website     = 4;
  string description = 5;
}

// MsgUpdateRequest defines the SDK message for updating a provider
message MsgUpdateRequest {
  string frm                     = 1;
  string name                     = 2;
  string identity                 = 3;
  string website                  = 4;
  string description              = 5;
  sentinel.types.v1.Status status = 6;
}

// MsgRegisterResponse defines the response of message MsgRegisterRequest
message MsgRegisterResponse {}

// MsgUpdateResponse defines the response of message MsgUpdateRequest
message MsgUpdateResponse {}

service MsgService {
  rpc MsgRegister(MsgRegisterRequest) returns (MsgRegisterResponse);
  rpc MsgUpdate(MsgUpdateRequest) returns (MsgUpdateResponse);
}
